Return-Path: <v9fs-developer-bounces@lists.sourceforge.net>
X-Original-To: lists+v9fs-developer@lfdr.de
Delivered-To: lists+v9fs-developer@lfdr.de
Received: from lists.sourceforge.net (lists.sourceforge.net [216.105.38.7])
	by mail.lfdr.de (Postfix) with ESMTPS id B22212FB5B1
	for <lists+v9fs-developer@lfdr.de>; Tue, 19 Jan 2021 12:35:37 +0100 (CET)
Received: from [127.0.0.1] (helo=sfs-ml-2.v29.lw.sourceforge.com)
	by sfs-ml-2.v29.lw.sourceforge.com with esmtp (Exim 4.90_1)
	(envelope-from <v9fs-developer-bounces@lists.sourceforge.net>)
	id 1l1pIN-0003IT-Mz; Tue, 19 Jan 2021 11:35:35 +0000
Received: from [172.30.20.202] (helo=mx.sourceforge.net)
 by sfs-ml-2.v29.lw.sourceforge.com with esmtps
 (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256) (Exim 4.90_1)
 (envelope-from <ashley_j@co-university.org>) id 1l1pIM-0003IM-A5
 for v9fs-developer@lists.sourceforge.net; Tue, 19 Jan 2021 11:35:34 +0000
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=sourceforge.net; s=x; h=List-Id:List-Unsubscribe:Content-Type:MIME-Version:
 To:Reply-To:From:Subject:Date:Message-ID:Sender:Cc:Content-Transfer-Encoding:
 Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
 Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:List-Help:
 List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=ZnaZhCFaZkGJhPkO1JtgpYdnsuRL1bqBZQ08OK2gzVU=; b=dWL8BZvoQ8bGOPqElLvm7j7LV6
 yVC9Yzv43WVH3QFCfVv9aBkAlM/nsr7qP11KRUcHCz0hNGxbxtGgGSnFI9cNcyzqtBjnrcIZU64i5
 g48uHuq5tJ1WWAJlZbu04d3N3xeYYW6fYpw2niBb0XFjceYO+USBS0vFB5bSCCTu1Ia4=;
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=sf.net; s=x
 ;
 h=List-Id:List-Unsubscribe:Content-Type:MIME-Version:To:Reply-To:From:
 Subject:Date:Message-ID:Sender:Cc:Content-Transfer-Encoding:Content-ID:
 Content-Description:Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc
 :Resent-Message-ID:In-Reply-To:References:List-Help:List-Subscribe:List-Post:
 List-Owner:List-Archive; bh=ZnaZhCFaZkGJhPkO1JtgpYdnsuRL1bqBZQ08OK2gzVU=; b=h
 Tb/xiqavdkTZWJENI5S5m+yGjsnfIXNs2ruha0ZaBiXAFT/1TZpoW5ltp7A6OBNas396bezTWUZ78
 47wzfcdfwGZBo3bXVx6414tusJmfX5oWcqSmdNEn95zWYBTm99YFKn/kme9cDgGGLdR17BnYa7Iu2
 sqLHUdy8SL4epD28=;
Received: from co-university.org ([54.37.18.112])
 by sfi-mx-3.v28.lw.sourceforge.com with esmtps
 (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256) (Exim 4.92.2)
 id 1l1pIA-00EaSa-VL
 for v9fs-developer@lists.sourceforge.net; Tue, 19 Jan 2021 11:35:34 +0000
Received: from co-university.org (localhost [127.0.0.1])
 by co-university.org (Postfix) with ESMTPS id B8DAD8179D
 for <v9fs-developer@lists.sourceforge.net>;
 Tue, 19 Jan 2021 11:35:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=co-university.org;
 s=202100; t=1611056116;
 bh=ZnaZhCFaZkGJhPkO1JtgpYdnsuRL1bqBZQ08OK2gzVU=;
 h=Date:Subject:From:Reply-To:To:List-Unsubscribe:List-Id:From;
 b=bxW6aXtm/DZHyoWsW1IDukb9Ttt42PQkz6cWIS38PFILo+GJLbMYtKuH0wy1dzP0p
 VWmdkXjXaqs7TVs5L/RxgAApioNjUSdHWT4NVXXhjnP435gQWZz6Oeq3uwCVOtrxGH
 8rUTg06le5fhOZTWCfavaElsPr/2VVhggqPNf4mCBNbJYuR/vnhzSHNVH6Tmr0heGC
 Z0/vv1+o7BXHQEZv+9XcmQFCmPeiNXdrMQQenx1nxbCcBi4z+23lYn2dpyvv9n1zVH
 0I4zlcpjxEqq/2fkcN05hcDMpmNLkigwoEOKoeTnl8/4lmU7oXYOWk9f48O+wRsqQf
 DipOfmQadBQfQ==
Message-ID: <4d262ecd6197c8a90120cb732b8aef1f@co-university.org>
Date: Tue, 19 Jan 2021 11:35:16 +0000
From: Ashley Johnson <ashley_j@co-university.org>
To: "v9fs-developer@lists.sourceforge.net"
 <v9fs-developer@lists.sourceforge.net>
MIME-Version: 1.0
X-Tghk-Tracking-Did: 0
X-Tghk-Subscriber-Uid: tb415ze304e35
X-Tghk-Mailer: SwiftMailer - 5.4.x
X-Tghk-EBS: http://co-university.org/index.php/lists/block-address
X-Tghk-Delivery-Sid: 1
X-Tghk-Customer-Uid: me0769r13a4bb
X-Tghk-Customer-Gid: 0
X-Tghk-Campaign-Uid: oy811aao9n0a8
X-Sender: ashley_j@co-university.org
X-Report-Abuse: Please report abuse for this campaign here:
 http://co-university.org/index.php/campaigns/oy811aao9n0a8/report-abuse/kd492bqselab7/tb415ze304e35
X-Receiver: v9fs-developer@lists.sourceforge.net
Precedence: bulk
List-Unsubscribe-Post: List-Unsubscribe=One-Click
Feedback-ID: oy811aao9n0a8:tb415ze304e35:kd492bqselab7:me0769r13a4bb
X-Spam-Score: 6.3 (++++++)
X-Spam-Report: Spam Filtering performed by mx.sourceforge.net.
 See http://spamassassin.org/tag/ for more details.
 1.9 URIBL_ABUSE_SURBL Contains an URL listed in the ABUSE SURBL blocklist
 [URIs: bible-freedom.org]
 2.5 URIBL_DBL_SPAM         Contains a spam URL listed in the Spamhaus DBL
 blocklist [URIs: co-university.org]
 -0.0 SPF_HELO_PASS          SPF: HELO matches SPF record
 -0.0 SPF_PASS               SPF: sender matches SPF record
 1.0 HTML_MESSAGE           BODY: HTML included in message
 -0.1 DKIM_VALID_AU Message has a valid DKIM or DK signature from author's
 domain
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature,
 not necessarily valid
 0.5 RAZOR2_CHECK           Listed in Razor2 (http://razor.sf.net/)
 1.5 RAZOR2_CF_RANGE_51_100 Razor2 gives confidence level above 50%
 [cf: 100]
 -1.0 MAILING_LIST_MULTI     Multiple indicators imply a widely-seen list
 manager 0.0 LOTS_OF_MONEY          Huge... sums of money
X-Headers-End: 1l1pIA-00EaSa-VL
X-Content-Filtered-By: Mailman/MimeDel 2.1.21
Subject: [V9fs-developer] Hey
X-BeenThere: v9fs-developer@lists.sourceforge.net
X-Mailman-Version: 2.1.21
List-Id: <v9fs-developer.lists.sourceforge.net>
List-Unsubscribe: <https://lists.sourceforge.net/lists/options/v9fs-developer>, 
 <mailto:v9fs-developer-request@lists.sourceforge.net?subject=unsubscribe>
List-Archive: <http://sourceforge.net/mailarchive/forum.php?forum_name=v9fs-developer>
List-Post: <mailto:v9fs-developer@lists.sourceforge.net>
List-Help: <mailto:v9fs-developer-request@lists.sourceforge.net?subject=help>
List-Subscribe: <https://lists.sourceforge.net/lists/listinfo/v9fs-developer>, 
 <mailto:v9fs-developer-request@lists.sourceforge.net?subject=subscribe>
Reply-To: Ashley Johnson <ashley_j@co-university.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: v9fs-developer-bounces@lists.sourceforge.net

SGksCkkgd2FudCB0byBzaGFyZSBhIG1lc3NhZ2UgdGhhdCBoYXMgYmVlbiBzcHJlYWRpbmcgYWxs
IG92ZXIgdGhlCmludGVybmV0IHRoYXQgY29uY2VybnMgdGhlIHRpbWVzIHdlIGFyZSBsaXZpbmcg
aW4uIFdoZXRoZXIgeW91IGJlbGlldmUKaW4gR29kIG9yIG5vdCwgdGhpcyBpcyBhIG11c3QgcmVh
ZCBtZXNzYWdlIQpXZSBjYW4gc2VlIHRocm91Z2hvdXQgdGltZSBob3cgd2UgaGF2ZSBiZWVuIHNs
b3dseSBjb25kaXRpb25lZCB0bwpjb21lIHRvIHRoaXMgcG9pbnQgd2hlcmUgd2UgYXJlIG9uIHRo
ZSB2ZXJnZSBvZiBhIGNhc2hsZXNzIHNvY2lldHkuCldvdWxkIGl0IHN1cnByaXNlIHlvdSB0byBr
bm93IHRoYXQgdGhlIEJpYmxlIGZvcmV0b2xkIG9mIHRoaXMgZXZlbnQ/CkRvbid0IGJlbGlldmUg
bWU/IFRoaXMgbWF5IGJlIHRoZSBtb3N0IGltcG9yYW50IG1lc3NhZ2UgeW91IHdpbGwgcmVhZApp
biB0aGVzZSB0aW1lcy4uLnBsZWFzZSBkbyBub3QgaWdub3JlIHRoaXMhClRoaXMgbWVzc3NhZ2Ug
cmV2ZWFscyB3aGF0IHRoZSBNYXJrIG9mIHRoZSBCZWFzdCBpcywgYW5kIHRoZSBtZWFuaW5nCmJl
aGluZCBjb3VudGluZyBhIG51bWJlciBwZW9wbGUgaGF2ZSBiZWVuIHBvbmRlcmluZyBmb3IgY2Vu
dHVyaWVzLAo2NjYuIFRoaXMgbWVzc2FnZSBhbHNvIHNoYXJlcyB3aHkgQmFyYWNrIE9iYW1hIHdp
bGwgYmUgdGhlIEFudGljaHJpc3QKYXMgd2VsbCBhcyB0aGUgZ29zcGVsIG1lc3NhZ2UuIFRoaXMg
aXMgdHJ1bHkgYSBtZXNzYWdlIGZyb20gR29kIQpJbiB0aGUgUmV2ZWxhdGlvbiBvZiBKZXN1cyBD
aHJpc3QgZ2l2ZW4gdG8gdGhlIGFwb3N0bGUgSm9obiwgd2UgcmVhZDoKLi4uIkFuZCBoZSAodGhl
IGZhbHNlIHByb3BoZXQgd2hvIGRlY2VpdmVzIG1hbnkgYnkgaGlzIG1pcmFjbGVzKQpjYXVzZXRo
IGFsbCwgdGhlIHNtYWxsIGFuZCB0aGUgZ3JlYXQsIGFuZCB0aGUgcmljaCBhbmQgdGhlIHBvb3Is
IGFuZAp0aGUgZnJlZSBhbmQgdGhlIGJvbmQsIHRoYXQgdGhlcmUgYmUgZ2l2ZW4gdGhlbSBhIG1h
cmsgb24gdGhlaXIgcmlnaHQKaGFuZCwgb3IgdXBvbiB0aGVpciBmb3JlaGVhZDsgYW5kIHRoYXQg
bm8gbWFuIHNob3VsZCBiZSBhYmxlIHRvIGJ1eSBvcgp0byBzZWxsLCBzYXZlIGhlIHRoYXQgaGF0
aCB0aGUgbWFyaywgZXZlbiB0aGUgbmFtZSBvZiB0aGUgYmVhc3Qgb3IgdGhlCm51bWJlciBvZiBo
aXMgbmFtZS4gSGVyZSBpcyB3aXNkb20uIEhlIHRoYXQgaGF0aCB1bmRlcnN0YW5kaW5nLCBsZXQK
aGltIGNvdW50IHRoZSBudW1iZXIgb2YgdGhlIGJlYXN0OyBmb3IgaXQgaXMgdGhlIG51bWJlciBv
ZiBhIG1hbjogYW5kCmhpcyBudW1iZXIgaXMgU2l4IGh1bmRyZWQgYW5kIHNpeHR5IGFuZCBzaXgi
IChSZXZlbGF0aW9uIDEzOjE2LTE4CkFTVikuLi4uClJlZmVycmluZyB0byB0aGUgbGFzdCBnZW5l
cmF0aW9uLCB0aGlzIGNvdWxkIG9ubHkgYmUgc3BlYWtpbmcgb2YgYQpjYXNobGVzcyBtb25leSBz
b2NpZXR5LCB3aGljaCB3ZSBoYXZlIHlldCB0byBzZWUsIGJ1dCBhcmUgaGVhZGluZwp0b3dhcmRz
LiBXaHk/IFJldmVsYXRpb24gMTM6MTcgdGVsbHMgdXMgdGhhdCB3ZSBjYW5ub3QgYnV5IG9yIHNl
bGwKdW5sZXNzIHdlIHJlY2VpdmUgdGhlIG1hcmsgb2YgdGhlIGJlYXN0IGluIG91ciByaWdodC1o
YW5kIG9yIGZvcmVoZWFkLgpXZSBjb3VsZCBzdGlsbCBidXkgb3Igc2VsbCBhbW9uZyBvbmUgYW5v
dGhlciB3aXRob3V0IHJlY2VpdmluZyB0aGUKbWFyayBpZiBwaHlzaWNhbCBtb25leSB3YXMgc3Rp
bGwgY3VycmVuY3kuIEl0IGxvZ2ljYWxseSBkZWR1Y2VzIGl0c2VsZgp0byB0aGlzIHJlYXNvbi4K
VGhlc2UgdmVyc2VzIGNvdWxkIG5vdCBiZSByZWZlcnJpbmcgdG8gc29tZXRoaW5nIHNwaXJpdHVh
bCBiZWNhdXNlCnRoZSB3b3JkIHJlZmVyZW5jZXMgdHdvIGRpZmZlcmVudCBwaHlzaWNhbCBsb2Nh
dGlvbnMgKG91ciByaWdodC1oYW5kCm9yIGZvcmVoZWFkKSBzdGF0aW5nIHRoZSBtYXJrIHdpbGwg
YmUgb24gb25lICJPUiIgdGhlIG90aGVyLiBJdCBvbmNlCmFnYWluIGxvZ2ljYWxseSBkZWR1Y2Vz
IGl0c2VsZiB0byB0aGlzIHJlYXNvbi4KSGVyZSBpcyB3aGVyZSBpdCByZWFsbHkgc3RhcnRzIHRv
IGNvbWUgdG9nZXRoZXIuIEl0IGlzIHNob2NraW5nIGhvdwphY2N1cmF0ZSB0aGUgQmlibGUgaXMg
Y29uY2VybmluZyB0aGUgUkZJRCBtaWNyb2NoaXAuIFRoZXNlIGFyZSBub3Rlcwpmcm9tIGEgbWFu
IG5hbWVkIENhcmwgU2FuZGVycyB3aG8gd29ya2VkIHdpdGggYSB0ZWFtIG9mIGVuZ2luZWVycyB0
bwpoZWxwIGRldmVsb3AgdGhpcyBtaWNyb2NoaXAgaW4gdGhlIGxhdGUgMTk2MCdzLgpDYXJsIFNh
bmRlcnMgc2F0IGluIHNldmVudGVlbiBOZXcgV29ybGQgT3JkZXIgY29uZmVyZW5jZXMgd2l0aCBo
ZWFkcwpvZiBzdGF0ZSBvZmZpY2lhbHMgc3VjaCBhcyBIZW5yeSBLaXNzaW5nZXIgYW5kIEJvYiBH
YXRlcyBvZiB0aGUgQy5JLkEuCnRvIGRpc2N1c3MgcGxhbnMgb24gaG93IHRvIGJyaW5nIGFib3V0
IHRoaXMgb25lLXdvcmxkIHN5c3RlbS4gVGhlIFVTCmdvdmVybm1lbnQgY29tbWlzc2lvbmVkIENh
cmwgU2FuZGVycyB0byBlbmdpbmVlciBhIG1pY3JvY2hpcCBmb3IKaWRlbnRpZnlpbmcgYW5kIGNv
bnRyb2xsaW5nIHRoZSBwZW9wbGVzIG9mIHRoZSBuYXRpb25zLWEgbWljcm9jaGlwCnRoYXQgd291
bGQgYmUgcGxhY2VkIHVuZGVyIHRoZSBza2luIHdpdGggYSBoeXBvZGVybWljIG5lZWRsZSAoYSBx
dWljaywKY29udmVuaWVudCBwcm9jZXNzIHRoYXQgd291bGQgYmUgZ3JhZHVhbGx5IGFjY2VwdGVk
IGJ5IHRoZSB3b3JsZCkuCkNhcmwgU2FuZGVycywgYWxvbmcgd2l0aCBhIGNyZXcgb2YgZW5naW5l
ZXJzIGJlaGluZCBoaW0sIHdpdGggVVMKZ3JhbnQgbW9uaWVzIHByb3ZpZGVkIGJ5IHRheCBkb2xs
YXJzLCB0b29rIG9uIHRoaXMgbWlzc2lvbiBhbmQKZW5naW5lZXJlZCBhIG1pY3JvY2hpcCB3aGlj
aCBpcyBwb3dlcmVkIGJ5IGEgbGl0aGl1bSBiYXR0ZXJ5LApyZWNoYXJnZWFibGUgYnkgd2F5IG9m
IHRoZSB0ZW1wZXJhdHVyZSBmbHVjdHVhdGlvbnMgaW4gb3VyIHNraW4uIFdpdGgKb3V0IGhhdmlu
ZyB1bmRlcnN0YW5kaW5nIG9mIHRoZSBob2x5IEJpYmxlIChDYXJsIFNhbmRlcnMgd2FzIG5vdCBh
CmJlbGlldmVyIGF0IHRoZSB0aW1lKSwgdGhlc2UgbWVuIHNwZW50IG9uZS1hbmQtYS1oYWxmLW1p
bGxpb24gZG9sbGFycwpnYXRoZXJpbmcgaW5mb3JtYXRpb24gb24gdGhlIGJlc3QgYW5kIG1vc3Qg
Y29udmVuaWVudCBsb2NhdGlvbiB0byBoYXZlCnRoZSBtaWNyb2NoaXAgaW5zZXJ0ZWQuClRoZXNl
IHJlc2VhcmNoZXJzIGRldGVybWluZWQgdGhhdCB0aGUgZm9yZWhlYWQgYW5kIHRoZSBiYWNrIG9m
IHRoZQpoYW5kICh0aGUgdHdvIHNwb3RzIFJldmVsYXRpb24gc2F5cyB0aGUgbWFyayB3aWxsIGJl
IHBsYWNlZCkgYXJlbid0Cm9ubHkgdGhlIG1vc3QgY29udmVuaWVudCBwbGFjZXMsIGhvd2V2ZXIg
YXJlIGFkZGl0aW9uYWxseSB0aGUgb25seQp2aWFibGUgc3BvdHMgZm9yIHJhcGlkLCBzdGVhZHkg
dGVtcGVyYXR1cmUgZmx1Y3R1YXRpb25zIGluIHRoZSBza2luIHRvCnJlY2hhcmdlIHRoZSBsaXRo
aXVtIGJhdHRlcnkuIFRoZSBtaWNyb2NoaXAgaXMgYXBwcm94aW1hdGVseSA3Cm1pbGxpbWV0ZXJz
IGluIGxlbmd0aCwgLjc1IG1pbGxpbWV0ZXJzIGluIGRpYW1ldGVyLCBhYm91dCB0aGUgc2l6ZSBv
ZgphIGdyYWluIG9mIHJpY2UuIEl0IGlzIGNhcGFibGUgb2YgY29udGFpbmluZyBwYWdlcyB1cG9u
IHBhZ2VzIG9mIGRhdGEKYWJvdXQgeW91LiBBbGwgeW91ciBiYXNpYyBoaXN0b3J5LCB3b3JrIHJl
Y29yZHMsIGNyaW1lIGRhdGEsIGhlYWx0aApkYXRhLCBhbmQgZmluYW5jaWFsIGhpc3Rvcnkgd2ls
bCBiZSBzdG9yZWQgb24gdGhpcyBjaGlwLgpDYXJsIFNhbmRlcnMgYmVsaWV2ZXMgdGhhdCB0aGlz
IG1pY3JvY2hpcCwgd2hpY2ggaGUgcmVncmV0ZnVsbHkKaGVscGVkIGVuZ2luZWVyLCBpcyB0aGUg
Im1hcmsiIHNwb2tlIG9mIGluIFJldmVsYXRpb24gMTM6MTYtMTguIFRoZQpHcmVlayB3b3JkIGZv
ciAibWFyayIgaXMgImNoYXJhZ21hLCIgd2hpY2ggaXMgZGVmaW5lZCBhcyBhICJzY3JhdGNoIG9y
CmV0Y2hpbmcuIiBBZGRpdGlvbmFsbHkgaXQgaXMgaW50ZXJlc3RpbmcgdG8gb2JzZXJ2ZSB0aGF0
IHRoZSBudW1iZXIKNjY2IGlzIGEgd29yZCBpbiB0aGUgb3JpZ2luYWwgR3JlZWsuIFRoZSB3b3Jk
IGlzICJjaGkgeGkgc3RpZ21hLCIgd2l0aAp0aGUgZmluYWwgcGFydCwgInN0aWdtYSwiIGFkZGl0
aW9uYWxseSBtZWFuaW5nICJ0byBzdGljayBvciBwcmljay4gTXIuClNhbmRlcnMgYmVsaWV2ZXMg
dGhpcyBpcyByZWZlcmVuY2luZyB0byB0aGUgdXNlIG9mIGEgaHlwb2Rlcm1pYyBuZWVkbGUKYmVp
bmcgcG9rZWQgaW50byB0aGUgaHVtYW4gZmxlc2ggdG8gaW5zZXJ0IHRoZSBtaWNyb2NoaXAuIgpN
ci4gU2FuZGVycyBhc2tlZCBhIEJvc3RvbiBNZWRpY2FsIENlbnRlciBkb2N0b3Igd2hhdCB3b3Vs
ZCBoYXBwZW4gaWYKdGhlIGxpdGhpdW0gY29udGFpbmVkIHdpdGhpbiB0aGUgUkZJRCBtaWNyb2No
aXAgbGVha2VkIGludG8gdGhlIGJvZHkuClRoZSBkb2N0b3IgcmVzcG9uZGVkIHRoYXQgaWYgdGhl
IG1pY3JvY2hpcCBicm9rZSBpbnNpZGUgYSBodW1hbiBib2R5LAp0aGUgbGl0aGl1bSB3b3VsZCBj
YXVzZSBhIHNldmVyZSBhbmQgcGFpbmZ1bCB3b3VuZCBmaWxsZWQgd2l0aCBwdXMuClRoaXMgaXMg
d2hhdCB0aGUgc2NyaXB0dXJlcyBvZiBSZXZlbGF0aW9uIDE2OjIgc2F5czoKIkFuZCB0aGUgZmly
c3QgKGFuZ2VsKSB3ZW50IGFuZCBwb3VyZWQgb3V0IGhpcyBib3dsIG9uIHRoZSBlYXJ0aDsgYW5k
CnRoZXJlIGNhbWUgYW4gZXZpbCBhbmQgZ3JpZXZvdXMgc29yZSB1cG9uIHRoZSBtZW4gdGhhdCBo
YWQgdGhlIG1hcmsgb2YKdGhlIGJlYXN0LCBhbmQgdGhvc2Ugd2hvIHdvcnNoaXBwZWQgaXRzIGlt
YWdlIiAoUmV2ZWxhdGlvbiAxNjoyCkRBUkJZKS4KVEhFIEhJRERFTiBNRUFOSU5HIEJFSElORCBU
SEUgTlVNQkVSIDY2NiBSRVZFQUxFRCEKU2NyaXB0dXJlIHRlbGxzIHVzIHRoYXQgd2UgY2FuJ3Qg
YnV5IG9yIHNlbGwgd2l0aG91dCBoYXZpbmcgdGhlIG1hcmsKb2YgdGhlIGJlYXN0LCBvciB0aGUg
bnVtYmVyIG9mIGl0cyBuYW1lLiBUaGUgbnVtYmVyIGJlaW5nIGlkZW50aWZpZWQKYXMgNjY2LiBT
Y3JpcHR1cmUgdGVsbHMgdXMgdG8gY2FsY3VsYXRlIHRoZSBudW1iZXIgNjY2LiBIb3cgZG8gd2UK
Y2FsY3VsYXRlIDY2Nj8KVGhpcyBpcyB3aGVyZSBpdCBiZWNvbWVzIGFuIGV5ZSBvcGVuZXIuIENv
dW50aW5nIHRoZSBudW1iZXIgb2YgdGhlCmJlYXN0LCA2NjYsIGhhcyBiZWVuIGxvbmcgZGlzY3Vz
c2VkIGFsbCB0aHJvdWdob3V0IGhpc3RvcnksIGhvd2V2ZXIKaGFzIG5vdyBiZWVuIHVudmVpbGVk
IGluIHRoZXNlIGZpbmFsIGRheXMgYnkgdGhlIEhvbHkgU3Bpcml0LiBXaGF0IHlvdQp3aWxsIHNl
ZSBjb25maXJtcyBpdHNlbGYgd2l0aCB0aGUgQmlibGUgdGhlIHRydWUgbWVhbmluZyB0byBjYWxj
dWxhdGUKNjY2LgpJbiB0aGUgQmlibGUsIEdvZCB1c2VzIHRoZSBudW1iZXIgMyBhcyBjb25maXJt
YXRpb24gb2YgdGhpbmdzLiBCZWxvdwphcmUgYSBmZXcgZXhhbXBsZXM6Ci4uLiJiZWNhdXNlIHRo
cmVlIGFyZSB3aG8gYXJlIHRlc3RpZnlpbmcgaW4gdGhlIGhlYXZlbiwgdGhlIEZhdGhlciwKdGhl
IFdvcmQsIGFuZCB0aGUgSG9seSBTcGlyaXQsIGFuZCB0aGVzZSAtLSB0aGUgdGhyZWUgLS0gYXJl
IG9uZSIgKDEKSm9obiA1OjcgWUxUKS4uLgouLi4iYW5kIHRoYXQgSGUgd2FzIGJ1cmllZCwgYW5k
IHRoYXQgSGUgd2FzIGJvZGlseSByYWlzZWQgb24gdGhlCnRoaXJkIGRheSBhY2NvcmRpbmcgdG8g
dGhhdCB3aGljaCB0aGUgU2NyaXB0dXJlcyBmb3JldG9sZCIgKDEKQ29yaW50aGlhbnMgMTU6NCBB
TVApLi4uCi4uLiJIb2x5LCBob2x5LCBob2x5LCBMb3JkIEdvZCBBbG1pZ2h0eSwgV2hvIHdhcyBh
bmQgaXMgYW5kIGlzIHRvCmNvbWUhIiAoUmV2ZWxhdGlvbiA0OjggTktKVikuLi4KV2hhdCdzIGlu
dGVyZXN0aW5nIGlzIHRoZSB0aGUgbWFyayBvZiB0aGUgYmVhc3QgaXMgcmV2ZWFsZWQgaW4gZGV0
YWlsCmluIDMgc2VwYXJhdGUgdmVyc2VzIChSZXZlbGF0aW9uIDEzOjE2LDE3LDE4KSwgYW5kIGV2
ZXJ5IHZlcnNlIGxpc3RzIDMKZGlzdGluY3QgY2hhcmFjdGVyaXN0aWNzIG9mIHRoZSBnaXZlbiBz
dWJqZWN0LiBUaGUgbGFzdCAzIGJlaW5nIHRoZQpudW1iZXIgc2l4IHVzZWQgMyB0aW1lcyBpbiBh
IHJvdy4gVGhpcyBsZWFkcyB0byB0aGUgbXlzdGVyeSB0byBzb2x2aW5nCmhvdyB0byBjYWxjdWxh
dGUgdGhlIG51bWJlciA2NjYuCldoYXQgZG9lcyBpdCBtZWFuIHRvIGNvdW50IHRoZSBudW1iZXIg
NjY2PyBJdCBtZWFucyB0byBhZGQgdXAuIFNvIGhvdwptaWdodCB3ZSBhZGQgdXAgNjY2PyBSZWNh
bGwgYmFjayB0byBteSBwcmlvciBmYWN0b3IgY29uY2VybmluZyBHb2QKY29uZmlybWluZyBpbiAz
J3MuIFNvIGxvZ2ljYWxseSwgd2hhdCBjYW4gYmUgdGhlIG1vc3QgcmF0aW9uYWwgd2F5IHRvCmNv
dW50IHRoZSBudW1iZXIgNjY2PyBUbyBhZGQgaXQgdXAgZXF1YWxseSBpbiAzJ3MgYmFzZWQgb2Zm
IHRoZQpudW1iZXIuIEl0IGlzIG5vdCByZWFzb25hYmxlIHRvIGNvdW50IGl0IGVxdWFsbHkgYXMg
NjAwKzYwKzYsIHRoaXMKd291bGQgYWxzbyB0YWtlIHVzIGJhY2sgdG8gdGhlIGJlZ2lubmluZy4g
V2UgY2FuJ3QgYWRkIGl0IGFzCjYwMCs2MDArNjAwLCBvciA2MCs2MCs2MCwgYmVjYXVzZSB0aGVy
ZSBhcmUgbm8gemVyb2VzIGluIGJldHdlZW4gb3IgYXQKdGhlIGVuZCBvZiA2NjYuIFRoZSBvbmx5
IHNlbnNpYmxlIG9wdGlvbiBpcyA2KzYrNj0xOC4gV2hhdCdzCmludGVyZXN0aW5nIGlzIHRoYXQg
dGhlIHZlcnNlIHRoYXQgdGVsbHMgdXMgdG8gY291bnQgdGhlIG51bWJlciBvZiB0aGUKYmVhc3Qg
aXRzZWxmIGlzIHZlcnNlIDE4LCBiZWluZyB0aGUgM3JkIHZlcnNlIG91dCBvZiAzIHZlcnNlcyB0
aGF0CmRlc2NyaWJlIHRoZSBtYXJrIG9mIHRoZSBiZWFzdC4gV2hhdCBpcyAxOCBkaXZpZGVkIGJ5
IDM/IDYuIFNvIDN4Nj0xOCwKb3IgNis2KzY9MTguCkFub3RoZXIgZmFzY2luYXRpbmcga2V5IGZh
Y3RvciBpcyB0aGUgb25seSB0d28gb3RoZXIgY29tYmluYXRpb25zCihtYWtpbmcgYSBjb21iaW5l
ZCB0b3RhbCBvZiAzIHBvc3NpYmxlIGNvbWJpbmF0aW9ucykgZm9yIHBsYWNpbmcgYQpwbHVzIHN5
bWJvbCBpbiBiZXR3ZWVuIHRoZSBzaXhlcyBhcmUgNjYrNj03MiwgYW5kIDYrNjY9NzIuIENvdW50
IGJvdGgKNzIncyB0b2dldGhlciBhbmQgeW91IGdldCAxNDQuIFdoeSB0aGUgbnVtYmVyIDE0NCBp
cyBpbnRlcmVzdGluZyBpcwpiZWNhdXNlIHRoZSB2ZXJzZSBmb2xsb3dpbmcgUmV2ZWxhdGlvbiAx
MzoxOCBpcyB0aGUgZmlyc3QgdGltZSBpbiB0aGUKSG9seSBCaWJsZSB3aGVyZSB0aGUgMTQ0LDAw
MCBhcmUgYmVpbmcgZGVzY3JpYmVkIGluIGRldGFpbDoKLi4uIkFuZCBJIHNhdywgYW5kIGJlaG9s
ZCwgdGhlIExhbWIgc3RhbmRpbmcgb24gdGhlIG1vdW50IFppb24sIGFuZAp3aXRoIGhpbSBhIGh1
bmRyZWQgYW5kIGZvcnR5IGFuZCBmb3VyIHRob3VzYW5kLCBoYXZpbmcgaGlzIG5hbWUsIGFuZAp0
aGUgbmFtZSBvZiBoaXMgRmF0aGVyLCB3cml0dGVuIG9uIHRoZWlyIGZvcmVoZWFkcyIgKFJldmVs
YXRpb24gMTQ6MQpBU1YpLi4uCk5vdyBpZiB5b3UgYWRkIHVwIGFsbCAzIG51bWJlcnMgYnkgY291
bnRpbmcgNjY2IGJ5IG1vdmluZyB0aGUgcGx1cwpzeW1ib2wgYXJvdW5kIGluIGFsbCAzIHBvc3Np
YmxlIGNvbWJpbmF0aW9ucywgSXQnZCBiZSA3Mis3MisxOD0xNjIuCldoYXQncyBmYXNjaW5hdGlu
ZyBpbiByZWdhcmRzIHRvIHRoZSBudW1iZXIgMTYyLCBpcywgaWYgeW91IGRpdmlkZQoxNDQsMDAw
IGJ5IDE2MiwgeW91IGdldCA4ODguIFRoZSBuYW1lIGZvciBKZXN1cyBpbiBHcmVlayBnZW1hdHJp
YSBhZGRzCnVwIHRvIDg4OC4gVGhlIE5ldyBUZXN0YW1lbnQgd2FzIHdyaXR0ZW4gaW4gR3JlZWsu
IFJldmVsYXRpb24gMTQ6MSBub3QKb25seSBtZW50aW9ucyB0aGUgMTQ0LDAwMCwgYnV0IGFkZGl0
aW9uYWxseSB0aGUgTGFtYiB3aG8gaXMgSmVzdXMKQ2hyaXN0LgpXaGF0IGlzIGZhc2NpbmF0aW5n
IGluIHJlZ2FyZHMgdG8gdGhlIHRoZSBudW1iZXIgZm9yIEplc3VzLCA4ODgsIGlzCnRoYXQgaWYg
eW91IGFwcGx5IHRoaXMgc2FtZSBmb3JtdWxhLCB5b3UgZ2V0IDgrOCs4PTI0LiBXaHkgdGhlIG51
bWJlcgoyND8gUmV2ZWxhdGlvbiBjaGFwdGVyIDQgdGVsbHMgdXMgdGhlcmUgYXJlIDI0IGVsZGVy
cyBzZWF0ZWQgYXJvdW5kCnRoZSB0aHJvbmUgb2YgR29kLiBUaGF0IGlzIHRoZSBzYW1lIHRocm9u
ZSB3aGVyZSBKZXN1cyBzaXRzOgoiSW1tZWRpYXRlbHkgSSB3YXMgaW4gdGhlIFNwaXJpdDsgYW5k
IGJlaG9sZCwgYSB0aHJvbmUgc2V0IGluIGhlYXZlbiwKYW5kIE9uZSBzYXQgb24gdGhlIHRocm9u
ZS4gQW5kIEhlIHdobyBzYXQgdGhlcmUgd2FzIGxpa2UgYSBqYXNwZXIgYW5kCmEgc2FyZGl1cyBz
dG9uZSBpbiBhcHBlYXJhbmNlOyBhbmQgdGhlcmUgd2FzIGEgcmFpbmJvdyBhcm91bmQgdGhlCnRo
cm9uZSwgaW4gYXBwZWFyYW5jZSBsaWtlIGFuIGVtZXJhbGQuIEFyb3VuZCB0aGUgdGhyb25lIHdl
cmUKdHdlbnR5LWZvdXIgdGhyb25lcywgYW5kIG9uIHRoZSB0aHJvbmVzIEkgc2F3IHR3ZW50eS1m
b3VyIGVsZGVycwpzaXR0aW5nLCBjbG90aGVkIGluIHdoaXRlIHJvYmVzOyBhbmQgdGhleSBoYWQg
Y3Jvd25zIG9mIGdvbGQgb24gdGhlaXIKaGVhZHMiIChSZXZlbGF0aW9uIDQ6Mi00KS4KTm93IGlm
IHlvdSB0YWtlIDgrOCs4PTI0LCBhbmQgOCs4OD05NiwgYW5kIDg4Kzg9OTYsIHlvdSBnZXQKMjQr
OTYrOTY9MjE2LiBUYWtlIDE0NCwwMDAgZGl2aWRlZCBieSAyMTYgYW5kIHlvdSBnZXQgNjY2LiBE
byBub3QKZm9yZ2V0IHRoYXQgdGhpcyB3YXMgdGhlIHNhbWUgbWV0aG9kIHRvIGdldCB0aGUgbnVt
YmVyIDE2MiBvdXQgb2YKY291bnRpbmcgNjY2IHRoYXQgYnJvdWdodCBmb3J0aCB0aGUgbnVtYmVy
IDg4OCB3aGVuIGRpdmlkaW5nIDE0NCwwMDAKYnkgMTYyLiBJdCBpcyBwZXJwZXR1YWwuCkJ5IHV0
aWxpemluZyB0aGUgaWRlbnRpY2FsIGZvcm11bGEgb2YgY291bnRpbmcgYnkgaW5jbHVkaW5nIHRo
ZSBwbHVzCnN5bWJvbCBpbiBiZXR3ZWVuIHRoZSBudW1iZXJzLCB3aHkgZG8gYWxsIHRoZXNlIG51
bWJlcnMgcmVsYXRlIGluIHN1Y2gKYSBtYW5uZXI/ClRoZSBib29rIG9mIFJldmVsYXRpb24gY29u
dGFpbnMgdGhlIHVzZSBvZiB0aGUgbnVtYmVyIDcgaW4gdmFyaW91cwpmb3Jtcy4gRm9yIGluc3Rh
bmNlIDcgc2VhbHMsIDcgdHJ1bXBldHMsIGFuZCA3IGJvd2xzLiBXaGF0IGlzCmludGVyZXN0aW5n
IGFib3V0IHRoZSBudW1iZXIgMzcgKHRocmVlIHNldmVucykgaXMgaWYgaWYgeW91IGRpdmlkZSBh
bnkKbnVtYmVyIHRoYXQgY29udGFpbnMgdGhlIHNhbWUgc2luZ2xlIGRpZ2l0IHRocmVlIHRpbWVz
IGluIGEgcm93LCBzdWNoCmFzIDExMSB0byA5OTksIGl0IGNvbWVzIG91dCB0byB0aGUgdmFsdWUg
b2YgaWYgeW91IHdlcmUgdG8gYWRkIGFsbAp0aHJlZSBudW1iZXJzIHVwLiBGb3IgZXhhbXBsZSA4
ODggZGl2aWRlZCBieSAzNyBlcXVhbHMgMjQuIFNvCjgrOCs4PTI0LiBPciA2NjYgZGl2aWRlZCBi
eSAzNyBlcXVhbHMgMTguIFNvIDYrNis2PTE4LiBDb3VsZCB0aGlzIGJlCmFub3RoZXIgd2F5IG9m
IEdvZCdzIHdvcmQgY29uZmlybWluZyBpdHNlbGYgdGhhdCB0aGUgbXlzdGVyeSBiZWhpbmQKY2Fs
Y3VsYXRpbmcgdGhlIG51bWJlciA2NjYgaW5kZWVkIGlzIDE4PwpZZXQgYW5vdGhlciBpbnRlcmVz
dGluZyBmYWN0b3IgdG8gb2JzZXJ2ZSBpcyB0aGF0IGlmIHlvdSBhZGQgdXAgYWxsCnRoZSBudW1i
ZXJzIGZyb20gMSB0byAzNiAoMSsyKzMuLi4rMzYpLCBpdCB0b3RhbHMgNjY2LiBUaGUgbnVtYmVy
IDM2LAphcyBpbiB0aHJlZSBzaXhlcz8gTWlnaHQgdGhpcyBiZSBhIHNpZ24gdGhhdCB3ZSBuZWVk
IHRvIGFkZCB1cCB0aHJlZQpzaXhlcyBpbnN0ZWFkIG9mIHBlcmNlaXZpbmcgdGhlIG51bWJlciBh
cyBzaXgtaHVuZHJlZCBzaXh0eSBzaXg/Ck5vdyB3aGF0IG1pZ2h0IHRoaXMgbWVhbj8gV2VsbCB3
ZSBrbm93IGluIHRoaXMgd29ybGQgd2UgYXJlCmlkZW50aWZpZWQgYnkgbnVtYmVycyBpbiB2YXJp
b3VzIGZvcm1zLiBTdGFydGluZyBmcm9tIG91ciBiaXJ0aApjZXJ0aWZpY2F0ZXMgdG8gc29jaWFs
IHNlY3VyaXR5LCBhcyB3ZWxsIGFzIG91ciBkcml2ZXJzIGxpY2Vuc2UsIGJlaW5nCmlkZW50aWZp
ZWQgZm91bmRlZCBvbiBhIHN5c3RlbSBvZiBydWxlciBzaGlwLiBTbyBpdCdzIGNvbmNlaXZhYmxl
IHRoYXQKdGhpcyBSRklEIGNoaXAgd2lsbCBpbmNvcnBvcmF0ZSBhIGJyYW5kIG5ldyBpZGVudGlm
aWNhdGlvbiB0aGF0IGhhcyBhCmNvbXBsZXRlIHRvdGFsIG9mIDE4IGNoYXJhY3RlcnMuCiJoZXJl
IHRoZSB3aXNkb20gaXMsIHRoZSBvbmUgaGF2aW5nIHRoZSBtaW5kIGxldCBoaW0gY2FsY3VsYXRl
IHRoZQpudW1iZXIgb2YgdGhlIHdpbGQgYmVhc3QsIG51bWJlciBmb3IgIm9mIGh1bWFuIiBpdCBp
cywgYW5kIHRoZSBudW1iZXIKb2YgaXQgNjY2IiAoUmV2ZWxhdGlvbiAxMzoxLCBHcmVlayBUcmFu
c2xhdGlvbikuClRoZSBHcmVlayB3b3JkICJhbnRocsWNcG9zIiBiZWluZyB1c2VkIGluIHZlcnNl
IDE4IHdoZXJlIGl0IHNheXMgIm9mCmh1bWFuIiBpcyB0aGUgR3JlZWsgc3Ryb25ncyBjb25jb3Jk
YW5jZSBHNDQ0LiBUaGUgZmlyc3QgdHdvCmRlZmluaXRpb25zIG9mIHRoZSB3b3JkIGFyZSAiYSBo
dW1hbiBiZWluZywgd2hldGhlciBtYWxlIG9yIGZlbWFsZSIsCmFuZCwgImdlbmVyaWNhbGx5LCB0
byBpbmNsdWRlIGFsbCBodW1hbiBpbmRpdmlkdWFscyIuIENvdWxkIHRoZSBudW1iZXIKb2YgdGhl
IGJlYXN0IGFwcGx5IHRvIGFsbCBtYW5raW5kPwpJbiB0aGUgR3JlZWsgKHRoZSBOZXcgVGVzdGFt
ZW50IHdhcyBvcmlnaW5hbGx5IHdyaXR0ZW4gaW4gdGhlIEdyZWVrCmxhbmd1YWdlKSwgYW5kIG90
aGVyIHRyYW5zbGF0aW9ucywgeW91IHdpbGwgbm90aWNlIHRoZSBiZWFzdCBpcwpkZXNjcmliZWQg
YXMgYW4gIml0IiwgaW5zdGVhZCBvZiAiaGltIi4gVGhlIHJlYXNvbiBJJ20gbWFraW5nIHRoaXMK
cG9pbnQgaXMgYmVjYXVzZSB3aGVuIGEgdHJhbnNsYXRpb24gc2F5cyAiSGlzIG51bWJlciBpcyA2
NjYiLCB0aGlzCndvdWxkIGltcGx5IGEgc2luZ3VsYXIgcGVyc29uLCB0aGUgQW50aWNocmlzdC4g
QnV0IGJ5IHNheWluZyAidGhlCm51bWJlciBvZiBpdCA2NjYiLCBpbXBsaWVzIHRoYXQgaXQgaXMg
b2YgdGhlIGJlYXN0IHN5c3RlbSBhcyBhIHdob2xlLgpXZSBjYW4ga25vdyB0aGUgbnVtYmVyIG9m
IHRoZSBiZWFzdCBjYW5ub3QgYmUgdG8gaWRlbnRpZnkgcHJvZHVjdHMKKGxpa2UgYSBuZXcgYmFy
Y29kZSkgdG8gYnV5IG9yIHNlbGwgYmVjYXVzZSBzY3JpcHR1cmUgc2F5cyB3ZSBjYW5ub3QKYnV5
IG9yIHNlbGwgd2l0aG91dCB0aGUgbnVtYmVyIG9mIHRoZSBiZWFzdC4gV2hhdCBhbSBJIGdldHRp
bmcgYXQ/ClRoZXJlIHdpbGwgYmUgaW5zdGFuY2VzIHdoZXJlIHlvdSBjb3VsZCBidXkgc29tZXRo
aW5nIHNvbWVvbmUgbWFkZQp0aGVtc2VsdmVzIGFuZCBpdCB3b3VsZG4ndCBoYXZlIGEgc3RvcmUg
YnJhbmRlZCBpZGVudGlmaWNhdGlvbiBvbiBpdC4KQnV0IGZvciB0aGlzIG51bWJlciB0byBiZSBp
biBvdXIgY2hpcHMsIHRoYXQgaXMgd2hlcmUgaXQgbXVzdCBiZSB0bwpjb25jbHVkZSB1bHRpbWF0
ZWx5IHRoYXQgd2UgY2Fubm90IGJ1eSBvciBzZWxsIHdpdGhvdXQgaGF2aW5nIHRoZQpudW1iZXIg
b2YgdGhlIGJlYXN0LiBBcyBwcmV2aW91c2x5IG1lbnRpb25lZCBpbiBSZXZlbGF0aW9uIDEzOjE4
LCB0aGUKbnVtYmVyIG9mIHRoZSBiZWFzdCAoNis2KzY9MTgpIGlzIGEgImh1bWFuIG51bWJlciIs
IGRlZmluaXRpb24KImdlbmVyaWNhbGx5LCB0byBpbmNsdWRlIGFsbCBodW1hbiBpbmRpdmlkdWFs
cyIuCk1pZ2h0IHRoaXMgYmUgdGhlIGlkZW50aWZpY2F0aW9uIG9mIHRoZSBiZWFzdCwgdGhlIG51
bWJlciBvZiBpdHMKbmFtZT8gVGhlIG9uZS13b3JsZCBiZWFzdCBzeXN0ZW0gd2hpY2ggaXMgaWRl
bnRpZmllZCBieSAxOCBjaGFyYWN0ZXJzPwpUaGlzIG1pZ2h0IG1hdGNoIHRoZSBzY3JpcHR1cmVz
IHRoYXQgc3BlYWtzIG9mIGEgbWFyayB0aGF0IHdlIG91Z2h0IHRvCmhhdmUgdG8gYnV5IG9yIHNl
bGwgaW4gb3VyIHJpZ2h0IGhhbmQgb3IgZm9yZWhlYWQsIGFuZCB0aGF0IGl0IGFsc28KaW5jbHVk
ZXMgdGhlIG51bWJlciBvZiB0aGUgYmVhc3QsIGluIHRoZSBjb3Vyc2Ugb2YgYSBmdXR1cmUgY2Fz
aGxlc3MKbW9uZXkgc29jaWV0eS4KR28gdG86IGh0dHA6Ly9iaWJsZS1mcmVlZG9tLm9yZwpodHRw
Oi8vY28tdW5pdmVyc2l0eS5vcmcvaW5kZXgucGhwL2NhbXBhaWduc1tDQU1QQUlHTl9VSUQvdHJh
Y2stdXJsL3RiNDE1emUzMDRlMzUvMGY3YmVjOTZkN2JhYzcxZTAxYjA1ZDJmZGY2N2M1Yjk5ZGY1
NjgzM3xodHRwOi8vdm9pY2UtdHJ1dGgub3JnCmh0dHA6Ly9jby11bml2ZXJzaXR5Lm9yZy9pbmRl
eC5waHAvY2FtcGFpZ25zL295ODExYWFvOW4wYTgvdHJhY2stdXJsL3RiNDE1emUzMDRlMzUvNmE1
ZWI0YjJkNDZhMmRmMzllNmU3OTZiMGRlOGJhYjVmNzA2NDE3ZXxodHRwOi8vcmV2b2x1dGlvbmJp
YmxlLm9yZwpodHRwOi8vY28tdW5pdmVyc2l0eS5vcmcvaW5kZXgucGhwL2NhbXBhaWducy9veTgx
MWFhbzluMGE4L3RyYWNrLXVybC90YjQxNXplMzA0ZTM1L2E4N2EzMTJiN2I5ZTQ2MGMwODkwMzdk
OGRiZDc4ZDI4MTFkNjZkOTNdCnRvIHNlZSBhbGwgdGhlIHByb29mIQpUaGUgSG9seSBzY3JpcHR1
cmVzIHdhcm5zIHVzIGluIHRoZSBlbmQgdGltZXMgdGhhdCBhIGZhbHNlIHByb3BoZXQKd2lsbCBy
aXNlIHVwIHBlcmZvcm1pbmcgbWlyYWN1bG91cyBzaWducyB0byBkZWNlaXZlIG1hbnkgdG8gcmVj
ZWl2ZQp0aGUgYmVhc3RzIG1hcms6Ci4uLiJCdXQgdGhlIGJlYXN0IHdhcyBjYXB0dXJlZCwgYW5k
IHdpdGggaXQgdGhlIGZhbHNlIHByb3BoZXQgd2hvIGhhZApwZXJmb3JtZWQgdGhlIHNpZ25zIG9u
IGl0cyBiZWhhbGYuIFdpdGggdGhlc2Ugc2lnbnMgaGUgaGFkIGRlbHVkZWQKdGhvc2Ugd2hvIGhh
ZCByZWNlaXZlZCB0aGUgbWFyayBvZiB0aGUgYmVhc3QgYW5kIHdvcnNoaXBlZCBpdHMgaW1hZ2Uu
ClRoZSB0d28gb2YgdGhlbSB3ZXJlIHRocm93biBhbGl2ZSBpbnRvIHRoZSBmaWVyeSBsYWtlIG9m
IGJ1cm5pbmcKc3VsZnVyIiAoUmV2ZWxhdGlvbiAxOToyMCBOSVYpLi4uCkF0IGFsbCBjb3N0cywg
RE8gTk9UIFRBS0UgSVQhCiJUaGVuIGEgdGhpcmQgYW5nZWwgZm9sbG93ZWQgdGhlbSwgc2F5aW5n
IHdpdGggYSBsb3VkIHZvaWNlLCAiSWYKYW55b25lIHdvcnNoaXBzIHRoZSBiZWFzdCBhbmQgaGlz
IGltYWdlLCBhbmQgcmVjZWl2ZXMgaGlzIG1hcmsgb24gaGlzCmZvcmVoZWFkIG9yIG9uIGhpcyBo
YW5kLCBoZSBoaW1zZWxmIHNoYWxsIGFsc28gZHJpbmsgb2YgdGhlIHdpbmUgb2YKdGhlIHdyYXRo
IG9mIEdvZCwgd2hpY2ggaXMgcG91cmVkIG91dCBmdWxsIHN0cmVuZ3RoIGludG8gdGhlIGN1cCBv
ZgpIaXMgaW5kaWduYXRpb24uIEhlIHNoYWxsIGJlIHRvcm1lbnRlZCB3aXRoIGZpcmUgYW5kIGJy
aW1zdG9uZSBpbiB0aGUKcHJlc2VuY2Ugb2YgdGhlIGhvbHkgYW5nZWxzIGFuZCBpbiB0aGUgcHJl
c2VuY2Ugb2YgdGhlIExhbWIuIEFuZCB0aGUKc21va2Ugb2YgdGhlaXIgdG9ybWVudCBhc2NlbmRz
IGZvcmV2ZXIgYW5kIGV2ZXI7IGFuZCB0aGV5IGhhdmUgbm8gcmVzdApkYXkgb3IgbmlnaHQsIHdo
byB3b3JzaGlwIHRoZSBiZWFzdCBhbmQgaGlzIGltYWdlLCBhbmQgd2hvZXZlcgpyZWNlaXZlcyB0
aGUgbWFyayBvZiBoaXMgbmFtZSIgKFJldmVsYXRpb24gMTQ6OS0xMSkuCldlJ3JlIHJlc2lkaW5n
IGluIHZlcnkgcHJvcGhldGljIHRpbWVzIHdpdGggdmVyeSBpbXBvcnRhbnQgQmlibGljYWwKcHJv
cGhlY2llcyBiZWluZyBmdWxmaWxsZWQuCldoZW4gRG9uYWxkIFRydW1wIHJlY29nbml6ZWQgSmVy
dXNhbGVtIGFzIGNhcGl0YWwgb2YgSXNyYWVsIG9uCkRlY2VtYmVyIDYgMjAxNywgdGhpcyB3YXMg
YSBtYXNzaXZlIHN0ZXAgdG8gYnJpbmcgZm9ydGggdGhlIFRoaXJkClRlbXBsZSBwcm9waGVzaWVk
IGluIHRoZSBIb2x5IEJpYmxlLgpUaGUgQmlibGUgYWxlcnRzIHVzIHRoYXQgdGhlIEFudGljaHJp
c3Qgd2lsbCBzZWF0IGhpbXNlbGYgaW4gdGhpcwp0ZW1wbGU6CiIuLi5hbmQgdGhlIG1hbiBvZiBz
aW4gaXMgcmV2ZWFsZWQsIHRoZSBzb24gb2YgcGVyZGl0aW9uLCB3aG8gb3Bwb3NlcwphbmQgZXhh
bHRzIGhpbXNlbGYgYWJvdmUgYWxsIHRoYXQgaXMgY2FsbGVkIEdvZCBvciB0aGF0IGlzIHdvcnNo
aXBlZCwKc28gdGhhdCBoZSBzaXRzIGFzIEdvZCBpbiB0aGUgdGVtcGxlIG9mIEdvZCwgc2hvd2lu
ZyBoaW1zZWxmIHRoYXQgaGUKaXMgR29kIiAoMiBUaGVzc2Fsb25pYW5zIDI6My00KS4KV2l0aGlu
IHRoZSBJc2xhbWljIHJlbGlnaW9uLCB0aGVyZSBpcyBhIGZpZ3VyZSByZWZlcnJlZCB0byBhcyB0
aGUKTWFoZGksIHJlZmVycmVkIHRvIGFzIHRoZWlyIG1lc3NpYWggd2hvIHRoZXkncmUgZWFnZXJs
eSB3YWl0aW5nIHRvIGJlCnJldmVhbGVkLiBUaGVyZSBhcmUgdmFyaW91cyB0ZXN0aW1vbmllcyBm
cm9tIHBlb3BsZSBvbiB0aGUgaW50ZXJuZXQKd2hvIGJlbGlldmUgdGhpcyBtYW4gc2hhbGwgYmUg
QmFyYWNrIE9iYW1hIHdobyBtYXkgYmUgdGhlIGJpYmxpY2FsCkFudGljaHJpc3QuIEkgcGVyc29u
YWxseSBoYXZlIGhhZCB1bnVzdWFsIGRyZWFtcyBhYm91dCBCYXJhY2suIEhlIGNhbWUKb24gc3Rh
Z2UgY2xhaW1pbmcgdG8gYmUgYSBmb2xsb3dlciBvZiBDaHJpc3Qgd2l0aCBubyBhZmZpbGlhdGlv
biB0bwp0aGUgTXVzbGltIGZhaXRoLCBob3dldmVyIGl0IHdhcyBsYXRlciByZXZlYWxlZCBieSBo
aXMgY2lyY2xlIG9mCnJlbGF0aXZlcyB0aGF0IGhlIGluZGVlZCBpcyBhIGZhaXRoZnVsIE11c2xp
bS4KU28gd2hhdCdzIGluIHRoZSBuYW1lPyBUaGUgbWVhbmluZyBvZiBzb21lb25lcyBuYW1lIGNh
biBzYXkgYSBsb3QKYWJvdXQgYSBwZXJzb24uIEdvZCB0aHJvdWdob3V0IGhpc3RvcnkgaGFzIGdp
dmVuIG5hbWVzIHRvIHBlb3BsZSB0aGF0CmhhdmUgYSBzcGVjaWZpYyBtZWFuaW5nIHRpZWQgdG8g
dGhlaXIgbGl2ZXMuIEhvdyBhYm91dCB0aGUgbmFtZSBCYXJhY2sKT2JhbWE/IExldCB1cyB0YWtl
IGEgbG9vayBhdCB3aGF0IG1heSBiZSBoaWRpbmcgYmVuZWF0aCB0aGUgc3VyZmFjZS4uLgpKZXN1
cyBzYXlzLCAiQW5kIEhlIHNhaWQgdG8gdGhlbSwgJ0kgc2F3IFNhdGFuIGZhbGwgbGlrZSBsaWdo
dG5pbmcKZnJvbSBoZWF2ZW4nIiAoTHVrZSAxMDoxOCkuCkluIEhlYnJldywgdGhlIHdvcmQgIkJh
cmFjayIgbWVhbnMgImxpZ2h0aW5nIiwgYW5kIHRoZSB1c2FnZSBvZgoiQmFtYSIgKFN0cm9uZ3Mg
SGVicmV3IHdvcmQgMTExNikgaXMgdXNlZCB0byBtZWFuIHRoZSAiaGVpZ2h0cyIgb2YKaGVhdmVu
LgrCoApUaGUgZGF5IGZvbGxvd2luZyB0aGUgZWxlY3Rpb24gb2YgQmFyYWNrIE9iYW1hICgxMS8w
NC8wOCksIHRoZQp0cml1bXBoaW5nIHNlbGVjdCAzIGxvdHRvIG51bWJlcnMgaW4gSWxsaW5vaXMg
KE9iYW1h4oCZcyBkb21lc3RpYwpzdGF0ZSkgZm9yIDExLzUvMDggd2VyZSA2NjYuCk9iYW1hIGhh
ZCBiZWVuIFUuUy4gc2VuYXRvciBmb3IgSWxsaW5vaXMsIGFuZCBoaXMgemlwIGNvZGUgd2FzIDYw
NjA2LgpSZWdhcmRsZXNzLCB3aG9ldmVyIHNlYXRzIHRoZW1zZWx2ZXMgaW4gdGhlIGZ1dHVyZSBU
aGlyZCBUZW1wbGUgdGhhdAppcyB0byBiZSBidWlsdCBpbiBKZXJ1c2FsZW0sIGRlY2xhcmluZyB0
aGVtc2VsdmVzIHRvIGJlIEdvZCBJUyBUSEUKQU5USUNIUklTVC4gRE8gTk9UIEJFIExFQUQgQVNU
UkFZLgpTbywgd2h5IGRvIHdlIG5lZWQgSmVzdXM/CiJmb3IgYWxsIGhhdmUgc2lubmVkIGFuZCBm
YWxsIHNob3J0IG9mIHRoZSBnbG9yeSBvZiBHb2QiIChSb21hbnMKMjoyMykuCiJGb3IgdGhlIHdh
Z2VzIG9mIHNpbiBpcyBkZWF0aCwgYnV0IHRoZSBnaWZ0IG9mIEdvZCBpcyBldGVybmFsIGxpZmUK
aW4gQ2hyaXN0IEplc3VzIG91ciBMb3JkIiAoUm9tYW5zIDY6MjMpLgpPdXIgb3duIHdvcmtzIGNh
bid0IHNhdmUgb3VyIHNvdWxzLiBJZiB3ZSBzdGVwIGluIGZyb250IG9mIGEganVkZ2UgaW4KdGhl
IGNvdXJ0IG9mIGxhdywgYmVpbmcgcmVzcG9uc2libGUgb2YgYSBjcmltaW5hbCBvZmZlbnNlLCB0
aGUganVkZ2UKd2lsbCBub3QganVkZ2UgdXMgYnkgdGhlIGdvb2QgdGhhdCB3ZSd2ZSBhY2NvbXBs
aXNoZWQsIHJhdGhlciB0aGUKY3JpbWVzIHdlJ3ZlIGNvbW1pdHRlZC4gSWYgd2UgYXMgZmFsbGVu
IGh1bWFuaXR5LCBjcmVhdGVkIGluIEdvZCdzCmltYWdlLCBwb3NlIHRoaXMga2luZCBvZiBqdXN0
aWNlLCBob3cgbXVjaCBtb3JlIGEgcGVyZmVjdCwgcmlnaHRlb3VzLAphbmQgSG9seSBjcmVhdG9y
PwpHb2QgaGFzIGludHJvZHVjZWQgdG8gdXMgSGlzIGV0aGljYWwgcmVndWxhdGlvbidzIGJ5IHRo
ZSB0ZW4KY29tbWFuZG1lbnRzIGdpdmVuIHRvIE1vc2VzIGF0IE10LiBTaWFuaS4gVGhlc2UgbGF3
cyB3ZXJlIG5vdCBnaXZlbiBzbwp3ZSBjYW4gYmUganVzdGlmaWVkLCBidXQgc28gdGhhdCB3ZSBt
aWdodCBzZWUgdGhlIG5lZWQgZm9yIGEgc2F2aW9yLgpUaGV5IGFyZSB0aGUgbWlycm9yIG9mIEdv
ZCdzIGNoYXJhY3RlciBvZiB3aGF0IEhlIGhhcyBwdXQgaW4gZWFjaCBhbmQKZXZlcnkgb25lIG9m
IHVzLCB3aXRoIG91ciBjb25zY2lvdXMgYmVhcmluZyB3aXRuZXNzIHRoYXQgd2UgYWxsIGtub3cK
dGhhdCBpdCdzIHdyb25nIHRvIHN0ZWFsLCBsaWUsIGRpc2hvbm9yIG91ciBwYXJlbnRzLCBhbmQg
c28gb24uCldlIGNhbiBhdHRlbXB0IHRvIGZvbGxvdyBhbGwgdGhlIGV0aGljYWwgZ3VpZGVsaW5l
cyBvZiB0aGUgdGVuCmNvbW1hbmRtZW50cywgYnV0IHdlJ2xsIG5ldmVyIGNhdGNoIHVwIHRvIHRo
ZW0gdG8gYmUganVzdGlmaWVkIGJlZm9yZQphIEhvbHkgR29kLiBUaGF0IHNhbWUgd29yZCBvZiB0
aGUgbGF3IHJlY2VpdmVkIGJ5IE1vc2VzIG1hbmlmZXN0ZWQgYXMKZmxlc2ggb3ZlciAyMDAwIHll
YXJzIGFnbyBpbiB0aGUgYm9keSBvZiBKZXN1cyBDaHJpc3QuIEhlIGNhbWUgdG8gYmUKb3VyIGp1
c3RpZmljYXRpb24gYnkgcGVyZmVjdGx5IGZ1bGZpbGxpbmcgdGhlIGNvbW1hbmRtZW50cyBvZiBH
b2QsCmxpdmluZyBhIHNpbmxlc3MgbGlmZSB0aGF0IG9ubHkgR29kIGNvdWxkIGFjY29tcGxpc2gu
ClRoZSBnYXAgYmV0d2VlbiB1cyBhbmQgdGhlIGxhdyBvZiBHb2QgY2FuIG5ldmVyIGJlIHJlY29u
Y2lsZWQgYnkgb3VyCm93biBwZXJzb25hbCBtZXJpdCwgYnV0IHRoZSBhcm0gb2YgSmVzdXMgaXMg
c3RyZXRjaGVkIG91dCBieSB0aGUgZ3JhY2UKYW5kIG1lcmN5IG9mIEdvZC4gQW5kIGlmIHdlIGFy
ZSB0byBncmFiIG9uLCBieSBmYWl0aCBpbiBIaW0sIEhlJ2xsCnB1bGwgdXMgZm9yd2FyZCBiZWlu
ZyB0aGUgb25lIHRvIGp1c3RpZnkgdXMuIEFzIGluIHRoZSBjb3VydCBvZiBsYXcsCmlmIHNvbWVv
bmUgc3RlcHMgaW4gYW5kIHBheXMgeW91ciBkZWJ0LCBldmVuIHRob3VnaCB5b3UgYXJlIGd1aWx0
eSwKdGhlIGp1ZGdlIGNhbiBkbyB3aGF0IGlzIGxlZ2FsIGFuZCBqdXN0IGFuZCBzZXQgeW91IGZy
ZWUuIFRoaXMgaXMgd2hhdApKZXN1cyBkaWQgYWxtb3N0IDIwMDAgeWVhcnMgYWdvIG9uIHRoZSBj
cm9zcy4gSXQgd2FzIGEgbGVnYWwKdHJhbnNhY3Rpb24gYmVpbmcgZnVsZmlsbGVkIGluIHRoZSBz
cGlyaXR1YWwgcmVhbG0gYnkgdGhlIHNoZWRkaW5nIG9mCkhpcyBibG9vZCwgd2l0aCBIaXMgbGFz
dCB3b3JkcyBiZWluZywgIi4uLkl0IGlzIGZpbmlzaGVkIS4uLiIgKEpvaG4KMTk6MzApLgpTbyB3
aHkgZGlkIEplc3VzIGhhdmUgdG8gZGllIGZvciB1cz8KRHVlIHRvIHRoZSBmYWN0IHRoYXQgR29k
IGlzIEhvbHkgYW5kIGp1c3QsIHRoZSB3cmF0aCB0aGF0IGJlbG9uZ3MgdG8KdXMgY291bGQgbm90
IGJlIG92ZXJsb29rZWQuIFRocm91Z2ggdGhlIHBlcmZlY3QgcmlnaHRlb3VzbmVzcyBhbmQKanVz
dGljZSBvZiBHb2QncyBjaGFyYWN0ZXIsIGl0IG91Z2h0IHRvIGJlIGRlYWx0IHdpdGgsIGl0IG91
Z2h0IHRvIGJlCnF1ZW5jaGVkIGFuZCBzYXRpc2ZpZWQuCkZvciBHb2QgdGFrZXMgbm8gcGxlYXN1
cmUgaW4gdGhlIGR5aW5nIG9mIHRoZSB3aWNrZWQgKEV6ZWtpZWwgMTg6MjMpLgpUaGlzIGlzIHdo
eSBpbiBJc2FpYWggY2hhcHRlciA1MywgdGhlIHBsYWNlIGl0IHNwZWFrcyBvZiB0aGUgY29taW5n
Ck1lc3NpYWggYW5kIEhpcyBzb3VsIGJlaW5nIGEgc2FjcmlmaWNlIGZvciBvdXIgc2lucywgd2h5
IGl0IHNheXMgaXQKc2F0aXNmaWVkIEdvZCB0byBjcnVzaCBIaXMgb25seSBiZWdvdHRlbiBTb24u
ClRoaXMgaXMgZHVlIHRvIHRoZSBmYWN0IHRoZSB3cmF0aCB0aGF0IHdlIGRlc2VydmUgd2FzIGp1
c3RpZmllZCBieQpiZWluZyBwb3VyZWQgb3V0IHVwb24gSGlzIFNvbi4gRm9yIGlmIGl0IHdlcmUg
dG8gYmUgcG91cmVkIG91dCBvbiB1cwp3aG8gZGVzZXJ2ZSBpdCwgd2Ugd291bGQgYWxsIGRpZSBh
bmQgZ28gdG8gaGVsbC4gR29kIGNyZWF0ZWQgYSBtZWFucwpvZiBlc2NhcGUgYnkgcG91cmluZyBp
dCBvdXQgb24gSGlzIFNvbiB3aG8ncyBzb3VsIGNvdWxkIG5vdCBiZSBsZWZ0IGluCkhhZGVzLCBi
dXQgd2FzIHJhaXNlZCBhbmQgc2VhdGVkIG9uIHRoZSByaWdodCBoYW5kIG9mIEdvZCBpbiBwb3dl
ci4KU28gbm93IHdoZW4gd2UgcHV0IG9uIHRoZSBMb3JkIEplc3VzIENocmlzdCAoUm9tYW5zIDEz
OjE0KSwgR29kIG5vCmxvbmdlciBsb29rcyBhdCB0aGUgaW5kaXZpZHVhbCB3aG8gZGVzZXJ2ZXMg
SGlzIHdyYXRoLCBidXQgbm93IHRoZQpnbG9yaW91cyBpbWFnZSBvZiBIaXMgcGVyZmVjdCBTb24g
bGl2aW5nIGluIHVzLCBqdXN0aWZ5aW5nIHVzIGFzIGlmIHdlCnJlY2VpdmVkIHRoZSB3cmF0aCB3
ZSBkZXNlcnZlLCBtYWtpbmcgYSBtZWFucyBvZiBlc2NhcGUgZnJvbSB0aGUgY3Vyc2UKb2YgZGVh
dGguCk5vdyB3aGF0IHdlIG91Z2h0IHRvIGRvIGlzIHR1cm4gZnJvbSBvdXIgc2lucyBhbmQgdHJ1
c3QgaW4gdGhlCnNhdmlvciwgY29uZmVzc2luZyBhbmQgdHVybmluZyBmcm9tIG91ciBzaW5zLiBU
aGlzIGlzIG5vdCBvbmx5IGEgaGVhZAprbm93bGVkZ2Ugb2YgYmVsaWV2aW5nIGluIEplc3VzLCBp
bnN0ZWFkIHJlY2VpdmluZyBIaXMgd29yZHMsIHRha2luZwp0aGVtIHRvIGhlYXJ0LiBJbiB3aGlj
aCB3ZSBubyBsb25nZXIgbGl2ZSB0byBwcmFjdGljZSBzaW4sIGJ1dCB0dXJuCmF3YXkgZnJvbSBv
dXIgc2lucyBhbmQgcHJhY3RpY2UgcmlnaHRlb3VzbmVzczoKIkRvIHlvdSBub3Qga25vdyB0aGF0
IHRoZSB1bnJpZ2h0ZW91cyB3aWxsIG5vdCBpbmhlcml0IHRoZSBraW5nZG9tIG9mCkdvZD8gRG8g
bm90IGJlIGRlY2VpdmVkLiBOZWl0aGVyIGZvcm5pY2F0b3JzLCBub3IgaWRvbGF0ZXJzLCBub3IK
YWR1bHRlcmVycywgbm9yIGhvbW9zZXh1YWxzLCBub3Igc29kb21pdGVzLCBub3IgdGhpZXZlcywg
bm9yIGNvdmV0b3VzLApub3IgZHJ1bmthcmRzLCBub3IgcmV2aWxlcnMsIG5vciBleHRvcnRpb25l
cnMgd2lsbCBpbmhlcml0IHRoZSBraW5nZG9tCm9mIEdvZC4gQW5kIHN1Y2ggd2VyZSBzb21lIG9m
IHlvdS4gQnV0IHlvdSB3ZXJlIHdhc2hlZCwgYnV0IHlvdSB3ZXJlCnNhbmN0aWZpZWQsIGJ1dCB5
b3Ugd2VyZSBqdXN0aWZpZWQgaW4gdGhlIG5hbWUgb2YgdGhlIExvcmQgSmVzdXMgYW5kCmJ5IHRo
ZSBTcGlyaXQgb2Ygb3VyIEdvZCIgKDEgQ29yaW50aGlhbnMgNjo5LTExKS4KQnkgZG9pbmcgc28g
d2UgbWF5IGNvbWUgdG8gYmUgdHJhbnNmb3JtZWQgaW50byB0aGUgaW1hZ2Ugb2YgR29kIGJ5CmZh
aXRoIGluIEhpcyBTb24gQ2hyaXN0IEplc3VzIFdobyBpcyBpbmNsaW5lZCB0byBnaXZlIHRoZSBI
b2x5IFNwaXJpdAp0byB0aG9zZSB3aG8gYXNrIG9mIEhpbToKIk1vc3QgYXNzdXJlZGx5LCBJIChK
ZXN1cykgc2F5IHRvIHlvdSwgdW5sZXNzIG9uZSBpcyBib3JuIG9mIHdhdGVyCmFuZCB0aGUgU3Bp
cml0LCBoZSBjYW5ub3QgZW50ZXIgdGhlIGtpbmdkb20gb2YgR29kLiBUaGF0IHdoaWNoIGlzIGJv
cm4Kb2YgdGhlIGZsZXNoIGlzIGZsZXNoLCBhbmQgdGhhdCB3aGljaCBpcyBib3JuIG9mIHRoZSBT
cGlyaXQgaXMgc3Bpcml0LgpEbyBub3QgbWFydmVsIHRoYXQgSSBzYWlkIHRvIHlvdSwgJ1lvdSBt
dXN0IGJlIGJvcm4gYWdhaW4uJyAoSm9obgozOjUtNikuCiJCdXQgeW91IGFyZSBub3QgaW4gdGhl
IGZsZXNoIGJ1dCBpbiB0aGUgU3Bpcml0LCBpZiBpbmRlZWQgdGhlIFNwaXJpdApvZiBHb2QgZHdl
bGxzIGluIHlvdS4gTm93IGlmIGFueW9uZSBkb2VzIG5vdCBoYXZlIHRoZSBTcGlyaXQgb2YKQ2hy
aXN0LCBoZSBpcyBub3QgSGlzIiAoUm9tYW5zIDg6OSkuCk5vdyB3aGF0IGFyZSB5b3Ugd2FpdGlu
ZyBmb3I/IE91ciBoZWF2ZW5seSBGYXRoZXIgb25seSBkZXNpcmVzIHRoZQpiZXN0IGZvciB1cywg
cmVzdG9yaW5nIGV2ZXJ5IHRoaW5nIHRoaXMgd29ybGQgaGFzIHN0b2xlbiBmcm9tIHVzLiBUaGlz
CmlzIHdoYXQgaXQgbWVhbnMgdG8gYmUgImhvbHkiLiBUbyBiZSBtYWRlIHdob2xlLgpIZSBpcyB3
YWl0aW5nIHRvIGxpc3RlbiB0byB5b3UuIFRoYXQgR29kIGdpdmVuIHRvbmd1ZSB0byBzcGVhawps
YW5ndWFnZSwgYnkgdXNpbmcgZmFpdGgsIHByYXkgdG8gSGltLCBhc2sgSGltIHRvIGZvcmdpdmUg
eW91IGJ5CmNvbmZlc3NpbmcgeW91ciBzaW5zIGFuZCBiZSB3aWxsaW5nIHRvIGZvcnNha2UgdGhl
bTsgdGhhdCB5b3UgcmVjZWl2ZQp0aGUgc2FjcmlmaWNlIG9mIEhpcyBTb24gSmVzdXMgb24gdGhl
IGNyb3NzLCBhbmQgdGhhdCB5b3UgbmVlZCBIaXMKSG9seSBTcGlyaXQgcmVzaWRpbmcgaW5zaWRl
IHlvdSB0cmFuc2Zvcm1pbmcgeW91IGludG8gYSBjaGlsZCBvZiB0aGUKbGl2aW5nIEdvZC4KSmVz
dXMgc2F5cywgImJ1dCB3aG9ldmVyIGRyaW5rcyBvZiB0aGUgd2F0ZXIgdGhhdCBJIHNoYWxsIGdp
dmUgaGltCih0aGUgSG9seSBTcGlyaXQpIHdpbGwgbmV2ZXIgdGhpcnN0LiBCdXQgdGhlIHdhdGVy
IHRoYXQgSSBzaGFsbCBnaXZlCmhpbSB3aWxsIGJlY29tZSBpbiBoaW0gYSBmb3VudGFpbiBvZiB3
YXRlciBzcHJpbmdpbmcgdXAgaW50bwpldmVybGFzdGluZyBsaWZlLiIKRGlkIHlvdSByZWFsaXpl
IHRoYXQgSmVzdXMgc3Bva2UgbW9yZSBhYm91dCBoZWxsIHRoYW4gYW55b25lIGVsc2UgaW4KR29k
J3MgaG9seSB3b3JkLCBldmVuIG1vcmUgdGhhbiBIZSBzcG9rZSBhYm91dCBoZWF2ZW4/ISBGb3Ig
dGhpcyB2ZXJ5CmNhdXNlIEhlIGNhbWUgdG8gZGllIGZvciB1cywgdG8gcmVzY3VlIHVzIGZyb20g
dGhpcyBwbGFjZSB0aGF0IHdlCmVhcm5lZCBieSBvdXIgc2lucy4KwqAKSGUgZGVzY3JpYmVzIGhl
bGwgYXMgYSBhY3R1YWwgcGxhY2Ugd2hlcmUsCiJUaGVpciB3b3JtIGRvZXMgbm90IGRpZQpBbmQg
dGhlIGZpcmUgaXMgbm90IHF1ZW5jaGVkIiAoTWFyayA5OjQ0KS4KQW5kIHdoZXJlLAoiVGhlcmUg
d2lsbCBiZSB3ZWVwaW5nIGFuZCBnbmFzaGluZyBvZiB0ZWV0aC4uLiIgKEx1a2UgMTM6MjgpLgpK
ZXN1cyB0ZWxscyB1cyB3aG8gdG8gZmVhciwKIkFuZCBkbyBub3QgZmVhciB0aG9zZSB3aG8ga2ls
bCB0aGUgYm9keSBidXQgY2Fubm90IGtpbGwgdGhlIHNvdWwuCkJ1dCByYXRoZXIgZmVhciBIaW0g
d2hvIGlzIGFibGUgdG8gZGVzdHJveSBib3RoIHNvdWwgYW5kIGJvZHkgaW4gaGVsbCIKKE1hdHRo
ZXcgMTA6MjgpLgoiTm93IEkgc2F3IGEgbmV3IGhlYXZlbiBhbmQgYSBuZXcgZWFydGgsIGZvciB0
aGUgZmlyc3QgaGVhdmVuIGFuZCB0aGUKZmlyc3QgZWFydGggaGFkIHBhc3NlZCBhd2F5LiBBbHNv
IHRoZXJlIHdhcyBubyBtb3JlIHNlYS4gVGhlbiBJLCBKb2huLApzYXcgdGhlIGhvbHkgY2l0eSwg
TmV3IEplcnVzYWxlbSwgY29taW5nIGRvd24gb3V0IG9mIGhlYXZlbiBmcm9tIEdvZCwKcHJlcGFy
ZWQgYXMgYSBicmlkZSBhZG9ybmVkIGZvciBoZXIgaHVzYmFuZC4gQW5kIEkgaGVhcmQgYSBsb3Vk
IHZvaWNlCmZyb20gaGVhdmVuIHNheWluZywgJ0JlaG9sZCwgdGhlIHRhYmVybmFjbGUgb2YgR29k
IGlzIHdpdGggbWVuLCBhbmQgSGUKd2lsbCBkd2VsbCB3aXRoIHRoZW0sIGFuZCB0aGV5IHNoYWxs
IGJlIEhpcyBwZW9wbGUuIEdvZCBIaW1zZWxmIHdpbGwKYmUgd2l0aCB0aGVtIGFuZCBiZSB0aGVp
ciBHb2QuIEFuZCBHb2Qgd2lsbCB3aXBlIGF3YXkgZXZlcnkgdGVhciBmcm9tCnRoZWlyIGV5ZXM7
IHRoZXJlIHNoYWxsIGJlIG5vIG1vcmUgZGVhdGgsIG5vciBzb3Jyb3csIG5vciBjcnlpbmcuClRo
ZXJlIHNoYWxsIGJlIG5vIG1vcmUgcGFpbiwgZm9yIHRoZSBmb3JtZXIgdGhpbmdzIGhhdmUgcGFz
c2VkIGF3YXkuJwpUaGVuIEhlIHdobyBzYXQgb24gdGhlIHRocm9uZSBzYWlkLCAnQmVob2xkLCBJ
IG1ha2UgYWxsIHRoaW5ncyBuZXcuJwpBbmQgSGUgc2FpZCB0byBtZSwgJ1dyaXRlLCBmb3IgdGhl
c2Ugd29yZHMgYXJlIHRydWUgYW5kIGZhaXRoZnVsLicKQW5kIEhlIHNhaWQgdG8gbWUsICdJdCBp
cyBkb25lISBJIGFtIHRoZSBBbHBoYSBhbmQgdGhlIE9tZWdhLCB0aGUKQmVnaW5uaW5nIGFuZCB0
aGUgRW5kLiBJIHdpbGwgZ2l2ZSBvZiB0aGUgZm91bnRhaW4gb2YgdGhlIHdhdGVyIG9mCmxpZmUg
ZnJlZWx5IHRvIGhpbSB3aG8gdGhpcnN0cy4gSGUgd2hvIG92ZXJjb21lcyBzaGFsbCBpbmhlcml0
IGFsbAp0aGluZ3MsIGFuZCBJIHdpbGwgYmUgaGlzIEdvZCBhbmQgaGUgc2hhbGwgYmUgTXkgc29u
LiBCdXQgdGhlCmNvd2FyZGx5LCB1bmJlbGlldmluZywgYWJvbWluYWJsZSwgbXVyZGVyZXJzLCBz
ZXh1YWxseSBpbW1vcmFsLApzb3JjZXJlcnMsIGlkb2xhdGVycywgYW5kIGFsbCBsaWFycyBzaGFs
bCBoYXZlIHRoZWlyIHBhcnQgaW4gdGhlIGxha2UKd2hpY2ggYnVybnMgd2l0aCBmaXJlIGFuZCBi
cmltc3RvbmUsIHdoaWNoIGlzIHRoZSBzZWNvbmQgZGVhdGguJyIKKFJldmVsYXRpb24gMjE6MS04
KS4KCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClY5ZnMt
ZGV2ZWxvcGVyIG1haWxpbmcgbGlzdApWOWZzLWRldmVsb3BlckBsaXN0cy5zb3VyY2Vmb3JnZS5u
ZXQKaHR0cHM6Ly9saXN0cy5zb3VyY2Vmb3JnZS5uZXQvbGlzdHMvbGlzdGluZm8vdjlmcy1kZXZl
bG9wZXIK
